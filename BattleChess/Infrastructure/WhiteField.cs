// <auto-generated />
namespace BattleChess.Infrastructure
{
    using Interfaces;
    using Utilities;

    /// <summary>
    /// Concrete implementation of IField. Extends Field
    /// </summary>
    public class WhiteField : Field
    {
        /// <summary>
        /// Constructor for BlackField that takes an IPosition and IChessBoard objects as arguments.
        /// Calls Field contructor with the IPosition object, the ColorType.White value and the IChessBoard object
        /// </summary>
        /// <param name="position">The IPosition object for this field</param>
        /// <param name="chessBoard">The IChessBoard object for this field</param>
        public WhiteField(IPosition position, IChessBoard chessBoard)
            : base(position, ColorType.White, chessBoard)
        {
        }

        public override IField Create()
        {
            return new WhiteField(this.Position, this.ChessBoard);
        }
    }
}
